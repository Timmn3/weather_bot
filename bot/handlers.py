from aiogram import Router, F, Dispatcher
from aiogram.types import Message, CallbackQuery, ContentType
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from config import settings
from weather.api_client import OpenWeatherClient
from weather.cache import WeatherCache, UserUnitsStore
from weather.formatting import format_weather_report
from bot.keyboards import units_inline, location_request_kb
from bot.states import WeatherStates

router = Router()

cache = WeatherCache(ttl_seconds=settings.cache_ttl_seconds)
user_units = UserUnitsStore(default_units=settings.default_units)
client = OpenWeatherClient(api_key=settings.weather_api_key, lang=settings.openweather_lang)

@router.message(Command("start"))
async def cmd_start(message: Message) -> None:
    text = (
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã.\n\n"
        "–ú–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é –∏–ª–∏ –≤–≤–µ—Å—Ç–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.\n"
        "–ù–∞–ø—Ä–∏–º–µ—Ä: <code>Moscow</code> –∏–ª–∏ <code>New York</code>.\n\n"
        "–í—ã–±–µ—Ä–∏ –µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è –Ω–∏–∂–µ:"
    )
    await message.answer(text, reply_markup=location_request_kb())
    await message.answer("–í—ã–±–æ—Ä –µ–¥–∏–Ω–∏—Ü:", reply_markup=units_inline())

@router.callback_query(F.data.startswith("units:"))
async def units_change(cb: CallbackQuery) -> None:
    val = cb.data.split(":", 1)[1]
    user_units.set_units(cb.from_user.id, val)
    await cb.message.edit_reply_markup(units_inline(val))
    await cb.answer("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")

@router.message(Command("weather"))
async def cmd_weather(message: Message, state: FSMContext) -> None:
    await message.answer("–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: <code>Berlin</code>):")
    await state.set_state(WeatherStates.waiting_for_city)

@router.message(WeatherStates.waiting_for_city)
async def get_city(message: Message, state: FSMContext) -> None:
    city = message.text.strip()
    units = user_units.get_units(message.from_user.id)
    cache_key = ("city", city.lower(), units)

    cached = cache.get(cache_key)
    if cached:
        await message.answer(format_weather_report(cached, units))
        await state.clear()
        return

    try:
        report = await client.get_by_city(city=city, units=units)
    except Exception:
        await message.answer(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É üòî\n\n"
            "–ü—Ä–æ–≤–µ—Ä—å –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è.\n"
            "–ü—Ä–∏–º–µ—Ä—ã: <code>Paris</code>, <code>Tokyo</code>."
        )
        await state.clear()
        return

    cache.set(cache_key, report)
    await message.answer(format_weather_report(report, units))
    await state.clear()

@router.message(F.content_type == ContentType.LOCATION)
async def on_location(message: Message) -> None:
    if not message.location:
        await message.answer(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã üòî\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É.\n"
            "–ò–ª–∏ –≤–≤–µ–¥–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—Ä—É—á–Ω—É—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "<code>55.7558, 37.6176</code> (–ú–æ—Å–∫–≤–∞)\n"
            "<code>40.7128, -74.0060</code> (–ù—å—é-–ô–æ—Ä–∫)"
        )
        return

    lat, lon = message.location.latitude, message.location.longitude
    units = user_units.get_units(message.from_user.id)
    cache_key = ("coords", round(lat, 3), round(lon, 3), units)

    cached = cache.get(cache_key)
    if cached:
        await message.answer(format_weather_report(cached, units))
        return

    try:
        report = await client.get_by_coords(lat=lat, lon=lon, units=units)
    except Exception:
        await message.answer(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–≥–æ–¥—É –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º üòî\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–∫–∞—Ü–∏—é –∏–ª–∏ –∑–∞–¥–∞–π –≥–æ—Ä–æ–¥ –∫–æ–º–∞–Ω–¥–æ–π /weather.\n"
            "–¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≤—Ä—É—á–Ω—É—é, –ø—Ä–∏–º–µ—Ä:\n"
            "<code>48.8566, 2.3522</code> (–ü–∞—Ä–∏–∂)"
        )
        return

    cache.set(cache_key, report)
    await message.answer(format_weather_report(report, units))


def setup_handlers(dp: Dispatcher) -> None:
    dp.include_router(router)
